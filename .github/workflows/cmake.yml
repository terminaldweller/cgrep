name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [9,10,11,12,13,14,15,16,17]

    steps:
    - uses: actions/checkout@v3
    
    - name: Get LLVM
      run: sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y && sudo apt-get update -y && wget https://apt.llvm.org/llvm.sh && chmod +x llvm.sh && sudo ./llvm.sh ${{matrix.version}} -n jammy && sudo apt-get install -y clang-${{matrix.version}} llvm-${{matrix.version}}-dev libclang-common-${{matrix.version}}-dev libclang-${{matrix.version}}-dev && git submodule init && git submodule update

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DLLVM_CONF=llvm-config-${{matrix.version}} -DCMAKE_CXX_COMPILER=clang++-${{matrix.version}} -DUSE_MONOLITH_LIBTOOLING=OFF -DLLVM_PACKAGE_VERSION=${{matrix.version}}.0.0

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
